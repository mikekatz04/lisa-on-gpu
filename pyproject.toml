[build-system]
requires = [
  "Cython",
  "numpy",
  "astropy",  # TODO: remove astropy?
  "lisaanalysistools>=1.0.17",
  "scikit_build_core",
]
build-backend = "scikit_build_core.build"

[project]
name = "fastlisaresponse" #@NAMESUFFIX@

description = "GPU-accelerated LISA Response Function"

authors = [
  { name = "Michael Katz", email = "mikekatz04@gmail.com" },
]
readme = "README.md"

requires-python = ">= 3.9"

dependencies = [
  "lisaanalysistools>=1.0.17",
  "exceptiongroup; python_version<'3.11'", # To access ExceptionGroup with Python 3.9 and 3.10
  "h5py",
  "matplotlib",
  "gpubackendtools",
  "jsonschema",                            # To validate content of file registry
  "lisaconstants",
  "multispline",
  "numba",
  "numpy",
  "nvidia-ml-py",                          # To detect CUDA version if any
  "platformdirs",                          # To locate config and data dir on all platforms
  "pydantic",                              # To handle citations and references with advanced dataclasses
  "pyyaml",                                # To read file registry
  "requests",                              # To download files automatically
  "rich",                                  # To display downlaod progress bar
  "scipy",
  "tqdm",
  "wrapt",
  #@DEPS_CUPYCUDA@,
  #@DEPS_FASTLISACORE@,
]


classifiers = [
  "Environment :: GPU :: NVIDIA CUDA",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Programming Language :: C++",
  "Programming Language :: Cython",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dynamic = [ "version" ]

optional-dependencies.doc = [
  "ipykernel",
  "ipython",
  "ipywidgets",
  "myst-parser",
  "nbsphinx",
  "pypandoc",
  "sphinx",
  "sphinx-rtd-theme",
  "sphinx-tippy",
]

optional-dependencies.sampling = [
  "eryn",
  "fastlisaresponse",
  "lisaanalysistools",
  "lisatools",
]

optional-dependencies.testing = [
  "matplotlib",
]

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
version_file = "src/fastlisaresponse/_version.py"
#@FALLBACK_VERSION@

[tool.scikit-build]
wheel.packages = ["src/fastlisaresponse"]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = [
  "src/fastlisaresponse/_version.py",
  "src/fastlisaresponse/git_version.py",                 #@SKIP_PLUGIN@
  "src/fastlisaresponse_backend_cuda11x/git_version.py",
  "src/fastlisaresponse_backend_cuda12x/git_version.py",
  "tests/"
]
sdist.exclude = [
  ".devcontainer/",
  ".github/",
  "dataset-preprocessing/",
  "docs/",
  "examples/",
  ".cmake-format.yaml",
  ".gitignore",
  ".pre-commit-config.yaml",
  "src/fastlisaresponse/_editable.py",
  "tests/base.py",
]

wheel.exclude = [
  "**.pyx",
  "**.cu",
  "**.cxx",
  "**.hh",
  "**.h",
  "**.hpp",
  "**/CMakeLists.txt",
  "lib/pkgconfig",
  "lib/cmake",
  "lib/*.so",
  "lib/*.a",
]

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.coverage]
paths.source = [
  "src/",
  "**/site-packages/",
]

report.omit = [
  "*/fastlisaresponse/_version.py",
  "*/fastlisaresponse/tests/*.py",
  "*/fastlisaresponse/git_version.py",
  "*/fastlisaresponse_backend_*/git_version.py",
]